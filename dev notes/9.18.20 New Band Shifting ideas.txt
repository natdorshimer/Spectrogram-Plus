9.18.20Now that the frequency shifting algorithm using shift maps is implemented, now Ijust have to design a frequency dependent map! I have settled upon 2 options fornow:User controlled: I let the user choose the attenuation length and attenuationmodulation of each frequency. Automatic: I automatically compute a map based on the side of the window and howfar it's going to shift. Two options here: Windows and Recursive Band ShiftingBasically what I'm going to do is formulate the attenuation length of a window sothat the attenuation within the window is above a certain percent, like 90% oreven 100%. Then I'm going to calculate the attenuation length by how far it'sgoing to go. The point of the attenuation length is to shift values *beyond* thewindow as well, and I want values that the window is getting shifted into to moveless.The absolute end of the window is probably going to be end frequency + shift valueor end frequency + shift value + some proportionate amount based on how far thefrequencies are being shifted.Going to decide what specific type of window later but that's how I'm going tocalculate the window. It's probably not gonna be perfect and is gonna need testing/ fixingThe other potential option: Recursive Band ShiftingFind out where the next frequency band above a threshold is and perform smartshifting based off that. As in, if the shift doesn't go into that band, don'tbother messing with that band. If it does go into that band, shift that band somefraction you shifted the previous one and recursively do shifts until the bandyou're working on doesn't touch a band. That kind of algorithm could get messy butI'm warming up to this option. I'm not going to call this Frequency DependentShifting like my algorithms listed above. I'll call it Recursive Band Shifting.Recursive Band Shifting would be implemented with a map just like every otherfrequency shift. My generalized frequency shift algorithm is really strong in thatsense.