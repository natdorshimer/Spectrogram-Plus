S+ Features TODO listSpectrogram Plus Resonance Processing Tools. Aka Spec+, S+, S++, etcAlpha build out! v0.5-alpha. Stage 1 done :^)Stage 2:* Perform testing on audio input and output	* Mostly by ear sounding for now 	* Do shifted resonances produce natural sounds?		* If not, how can I improve on my shifting to make it sound more natural? * Study more voice mechanics to make sure I know exactly what different resonant  shifts do	* Make a general map relating resonant shifts with the accompanied sound	* Come up with different types of audio filters that would accompany those 	shifts-> Beta    ETA free time dependentFinal Stage:* Refine GUI + reevaluate project needs* Think about how I want to incorporate the vocal technique -> resonant shift map	* Decide if worth implementing before 1.0 or save that for the next ver.-> Initial Version Release (1.0) General notes: * Consider parallelization of ISTFT and STFT if needed for real time calculation. Currently leaving real time calculation to Spectrogram so not necessary atm* Consider changing the name of FFTs to STFT. While the structure is technically a collection of FFTs and the data used to create the FFTs, hence, FFTs, it is much more accurately a Short Time Fourier Transform of a signal.* Consider deprecating Spectrogram.cs and moving to my custom FFTs class